@page "{studyId}"
@model Research_Software_Dev.Pages.Data.CategoryTrendModel
@{
    ViewData["Title"] = "Category Trends Over Sessions";
}

<h1>Category Trends Over Sessions</h1>

<form method="get" id="filterForm">
    <input type="hidden" asp-for="StudyId" />
    <!-- Step 2: Select Participants -->
    @if (Model.AvailableParticipants != null && Model.AvailableParticipants.Any())
    {
        <label>Select Participants:</label>
        <div class="form-group">
            @foreach (var participant in Model.AvailableParticipants)
            {
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="participant_@participant.ParticipantId" name="Participants" value="@participant.ParticipantId" />
                    <label class="form-check-label" for="participant_@participant.ParticipantId">
                        @participant.ParticipantFirstName @participant.ParticipantLastName
                    </label>
                </div>
            }
        </div>
    }
    else
    {
        <p>No participants available for the selected study.</p>
    }

    <!-- Step 3: Select Date Range -->
    <label for="startDate">Select Start Date:</label>
    <input id="startDate" type="date" name="StartDate" class="form-control" asp-for="StartDate" />

    <label for="endDate">Select End Date:</label>
    <input id="endDate" type="date" name="EndDate" class="form-control" asp-for="EndDate" />

    <button type="submit" class="btn btn-primary mt-2">Generate Chart</button>
</form>

<!-- Graph Container -->
<canvas id="categoryTrendsChart" class="mt-4"></canvas>

<!-- Save as PDF Button -->
<button id="savePdfButton" class="btn btn-secondary mt-4">Save as PDF</button>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    const chartData = @Html.Raw(Model.ChartDataJson ?? "{}");

    if (chartData && chartData.labels) {
        const ctx = document.getElementById('categoryTrendsChart').getContext('2d');
        const datasets = chartData.categories.map((category, index) => ({
            label: category,
            data: chartData.scores[index],
            borderColor: chartData.colors[index],
            backgroundColor: chartData.colors[index] + '33',
            fill: false
        }));

        new Chart(ctx, {
            type: 'line',
            data: {
                labels: chartData.labels.map(label => new Date(label).toLocaleDateString()),
                datasets: datasets
            },
            options: {
                responsive: true,
                scales: {
                    x: { title: { display: true, text: "Sessions" } },
                    y: { title: { display: true, text: "Average Scores" }, beginAtZero: true }
                }
            }
        });

        // Save as PDF functionality
        document.getElementById('savePdfButton').addEventListener('click', function () {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF({
                orientation: 'landscape',
                unit: 'px',
                format: [1024, 768],
            });

            const canvas = document.getElementById('categoryTrendsChart');
            const imgData = canvas.toDataURL('image/jpeg', 0.7);

            // Add chart to PDF
            pdf.text("Category Trends Over Sessions", 20, 20);
            pdf.addImage(imgData, 'JPEG', 20, 40, 960, 540);

            // Save PDF
            pdf.save('Category_Trends_Chart.pdf');
        });
    }
</script>
