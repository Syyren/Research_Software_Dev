@page
@model Research_Software_Dev.Pages.Data.SessionCategoryScoreModel
@{
    ViewData["Title"] = "Category Scores for a Participant";
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Category Scores for a Participant</h1>

    <!-- Form for Participant and Session Selection -->
    <form method="get" id="filterForm" class="needs-validation" novalidate>
        <div class="form-group mb-3">
            <label for="participant">Select Participant:</label>
            <select id="participant" name="participantId" class="form-control" required>
                <option value="">-- Select Participant --</option>
                @foreach (var participant in Model.AvailableParticipants)
                {
                    <option value="@participant.ParticipantId"
                            selected="@(Model.SelectedParticipantId == participant.ParticipantId ? "selected" : null)">
                        @participant.ParticipantFirstName @participant.ParticipantLastName
                    </option>
                }
            </select>
        </div>

        <div class="form-group mb-3">
            <label for="session">Select Session:</label>
            <select id="session" name="sessionId" class="form-control" required>
                <option value="">-- Select Session --</option>
                @foreach (var session in Model.AvailableSessions)
                {
                    <option value="@session.SessionId"
                            selected="@(Model.SelectedSessionId == session.SessionId ? "selected" : null)">
                        @session.Date.ToShortDateString()
                    </option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary w-100">Generate Chart</button>
    </form>

    <!-- Chart Container -->
    <canvas id="categoryScoresChart" class="mt-4" aria-label="Category Scores Chart" role="img"></canvas>

    <!-- Save as PDF Button -->
    <button id="savePdfButton" class="btn btn-secondary mt-4">Save as PDF</button>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    const chartData = @Html.Raw(Model.ChartDataJson ?? "{}");

    if (chartData && chartData.labels) {
        const ctx = document.getElementById('categoryScoresChart').getContext('2d');
        const datasets = [{
            label: 'Category Scores',
            data: chartData.scores,
            backgroundColor: chartData.colors,
            borderColor: chartData.colors,
            borderWidth: 1
        }];

        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: chartData.labels, // Categories
                datasets: datasets
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return `${tooltipItem.label}: ${tooltipItem.raw}`;
                            }
                        }
                    }
                },
                scales: {
                    x: { title: { display: true, text: "Categories" } },
                    y: { title: { display: true, text: "Scores" }, beginAtZero: true }
                }
            }
        });

        // Save as PDF functionality
        document.getElementById('savePdfButton').addEventListener('click', function () {
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF({
                orientation: 'landscape',
                unit: 'px',
                format: [1024, 768],
            });

            const canvas = document.getElementById('categoryScoresChart');
            const imgData = canvas.toDataURL('image/jpeg', 0.7);

            pdf.text("Category Scores for a Participant", 20, 20);
            pdf.addImage(imgData, 'JPEG', 20, 40, 960, 540);
            pdf.save('Category_Scores_Chart.pdf');
        });
    }
</script>
