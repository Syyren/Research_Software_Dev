@page "{id}"
@using Research_Software_Dev.Models.Forms
@model Research_Software_Dev.Pages.Forms.EditModel
@{
    ViewData["Title"] = "Edit Form";
}

<h1>Edit Form</h1>

<form method="post">
    <!-- Add Question Button -->
    <a asp-page="./AddQuestion" asp-route-formId="@Model.Form.FormId" class="btn btn-outline-success">Add a Question</a>

    <input type="hidden" asp-for="Form.FormId" />

    <!-- Form Name -->
    <div class="form-group">
        <label for="FormName">Form Name</label>
        <input type="text" asp-for="Form.FormName" class="form-control" />
        <span asp-validation-for="Form.FormName" class="text-danger"></span>
    </div>

    <!-- Questions List -->
    <div class="form-group">
        <label>Questions</label>
        <ul id="questions-list" class="list-group">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <li class="list-group-item">
                    <input type="hidden" asp-for="Questions[@i].FormId" />
                    <input type="hidden" asp-for="Questions[@i].FormQuestionId" />
                    <div class="row">
                        <div class="col-1">
                            <input type="number" asp-for="Questions[@i].QuestionNumber" class="form-control" />
                        </div>
                        <div class="col-4">
                            <input type="text" asp-for="Questions[@i].QuestionDescription" class="form-control" />
                        </div>
                        <div class="col-3">
                            <select asp-for="Questions[@i].Type" class="form-control question-type-selector" data-question-index="@i">
                                <option value="SingleChoice">Single Choice</option>
                                <option value="LikertScale">Likert Scale</option>
                                <option value="FreeText">Free Text</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <input type="text" asp-for="Questions[@i].Category" class="form-control" placeholder="Category (Optional)" />
                        </div>
                    </div>
                    <div class="mt-2 choices-section" id="choices-section-@i" style="display: @(Model.Questions[i].Type == QuestionType.LikertScale || Model.Questions[i].Type == QuestionType.SingleChoice ? "block" : "none")">
                        <label>Choices</label>
                        <div id="choices-container-@i">
                            @{
                                var choices = Model.Questions[i].Options;
                                for (int j = 0; j < choices.Count; j++)
                                {
                                    <div class="row mb-2">
                                        <div class="col-8">
                                            <input type="text" name="Questions[@i].Options[@j].OptionText" value="@choices[j].OptionText" class="form-control" placeholder="Choice Text" />
                                        </div>
                                        <div class="col-4">
                                            <input type="number" name="Questions[@i].Options[@j].OptionValue" value="@choices[j].OptionValue" class="form-control" placeholder="Value (Optional)" step="0.01" />
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <button type="button" class="btn btn-outline-primary add-choice" data-question-index="@i">Add Choice</button>
                    </div>
                </li>
            }
        </ul>
    </div>

    <!-- Action Buttons -->
    <div class="form-group mt-2">
        <button type="submit" class="btn btn-outline-primary">Save</button> |
        <a class="btn btn-outline-dark" asp-page="./Index">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-square" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1-1zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm11.5 5.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z" />
            </svg> Back to List
        </a>
    </div>
</form>

@section Scripts {
    <script>
        document.querySelectorAll('.question-type-selector').forEach(selector => {
            selector.addEventListener('change', function () {
                const index = this.getAttribute('data-question-index');
                const section = document.getElementById(`choices-section-${index}`);
                if (this.value === 'SingleChoice' || this.value === 'LikertScale') {
                    section.style.display = 'block';
                } else {
                    section.style.display = 'none';
                    document.getElementById(`choices-container-${index}`).innerHTML = '';
                }
            });
        });

        document.querySelectorAll('.add-choice').forEach(button => {
            button.addEventListener('click', function () {
                const index = this.getAttribute('data-question-index');
                const container = document.getElementById(`choices-container-${index}`);
                const choiceCount = container.childElementCount;
                const row = document.createElement('div');
                row.classList.add('row', 'mb-2');
                row.innerHTML = `
                    <div class="col-8">
                        <input type="text" name="Questions[${index}].Options[${choiceCount}].OptionText" class="form-control" placeholder="Choice Text" />
                    </div>
                    <div class="col-4">
                        <input type="number" name="Questions[${index}].Options[${choiceCount}].OptionValue" class="form-control" placeholder="Value (Optional)" step="0.01" />
                    </div>
                `;
                container.appendChild(row);
            });
        });
    </script>
}
