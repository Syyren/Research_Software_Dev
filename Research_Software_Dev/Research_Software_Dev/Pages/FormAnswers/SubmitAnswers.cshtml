@page "{formId}/{participantId}/{sessionId}"
@model Research_Software_Dev.Pages.Forms.SubmitAnswersModel
@{
    ViewData["Title"] = "Submit Answers";
}

<h1>Submit Answers</h1>

<form method="post">
    <input type="hidden" asp-for="FormId" />
    <input type="hidden" asp-for="ParticipantId" />
    <input type="hidden" asp-for="SessionId" />

    <div class="form-group">
        <h2>Form: @Model.FormName</h2>
        <p>Participant: @Model.ParticipantName</p>
        <p>Session ID: @Model.SessionId</p>
    </div>

    <div class="form-group mb-2">
        <h3>Questions</h3>
        @if (!Model.Questions.Any())
        {
            <p>No questions found.</p>
        }
        else
        {
            <div id="questions-container">
                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    <div class="form-group mb-4" id="question-@i">
                        <label>@Model.Questions[i].QuestionNumber. @Model.Questions[i].QuestionDescription</label>

                        <input type="hidden" name="Answers[@i].FormQuestionId" value="@Model.Questions[i].FormQuestionId" />
                        <input type="hidden" name="Answers[@i].ParticipantId" value="@Model.ParticipantId" />
                        <input type="hidden" name="Answers[@i].SessionId" value="@Model.SessionId" />
                        <input type="hidden" id="answer-id-@i" name="Answers[@i].AnswerId" />

                        @if (Model.Questions[i].Type == Research_Software_Dev.Models.Forms.QuestionType.SingleChoice)
                        {
                            <select name="Answers[@i].SelectedOption" class="form-control" required>
                                <option value="">-- Select an Option --</option>
                                @foreach (var option in Model.Questions[i].Options)
                                {
                                    <option value="@option.OptionId">@option.OptionText (@option.OptionValue)</option>
                                    <input type="hidden" name="Answers[@i].TextAnswer" class="form-control" value="N/A" required />
                                }
                            </select>
                        }
                        else if (Model.Questions[i].Type == Research_Software_Dev.Models.Forms.QuestionType.LikertScale)
                        {
                            @foreach (var option in Model.Questions[i].Options)
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="Answers[@i].SelectedOption" value="@option.OptionId" required />
                                    <input type="hidden" name="Answers[@i].TextAnswer" class="form-control" value="N/A" required />
                                    <label class="form-check-label">@option.OptionText (@option.OptionValue)</label>
                                </div>
                            }
                        }
                        else if (Model.Questions[i].Type == Research_Software_Dev.Models.Forms.QuestionType.FreeText)
                        {
                            <input type="text" name="Answers[@i].TextAnswer" class="form-control" required />
                        }
                    </div>
                }
            </div>
        }
    </div>

    <button type="submit" class="btn btn-outline-primary" id="submit-button">Submit</button>
    <a asp-page="./Index" class="btn btn-outline-primary">Cancel</a>
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Generate unique AnswerId for each question
            const questionsContainer = document.getElementById('questions-container');
            if (questionsContainer) {
                const questionGroups = questionsContainer.querySelectorAll('.form-group');
                questionGroups.forEach((questionGroup, index) => {
                    const answerIdInput = questionGroup.querySelector(`#answer-id-${index}`);
                    if (answerIdInput) {
                        answerIdInput.value = crypto.randomUUID(); // Generate UUID for AnswerId
                    }
                });
            }
        });

        document.getElementById('submit-button').addEventListener('click', (e) => {
            console.log('Form submitted. Answer IDs:');
            const answerIds = Array.from(document.querySelectorAll('[id^="answer-id-"]'))
                .map(input => input.value);
            console.log(answerIds);
        });
    </script>
}
